- group: Access to Security Account Manager database
  description: |
    Adversaries may attempt to extract credential material from
    the Security Account Manager (SAM) database. The SAM is a database
    file that contains local accounts for the host.
  labels:
    tactic.id: TA0006
    tactic.name: Credential Access
    tactic.ref: https://attack.mitre.org/tactics/TA0006/
    technique.id: T1003
    technique.name: OS Credential Dumping
    technique.ref: https://attack.mitre.org/techniques/T1003/
    subtechnique.id: T1003.002
    subtechnique.name: Security Account Manager
    subtechnique.ref: https://attack.mitre.org/techniques/T1003/002/
  rules:
    - name: File access to SAM database
      description: |
        Identifies access to the Security Account Manager on-disk database.
      condition: >
        open_file
            and
        file.name imatches
            (
              '?:\\WINDOWS\\SYSTEM32\\CONFIG\\SAM',
              '\\Device\\HarddiskVolumeShadowCopy*\\WINDOWS\\SYSTEM32\\CONFIG\\SAM',
              '\\??\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy*\\WINDOWS\\SYSTEM32\\CONFIG\\SAM'
            )
            and
            not
        ps.exe imatches
            (
              '?:\\Program Files\\*',
              '?:\\Program Files (x86)\\*',
              '?:\\Windows\\System32\\lsass.exe'
            )
      action: >
        {{
            emit . "File access to SAM database" ""
        }}
    - name: Potential SAM database dump through registry
      description:
        Identifies access to the Security Account Manager registry hives.
      condition: >
        (query_registry or open_registry)
            and
        registry.key.name imatches
              (
                'HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account\\*',
                'HKEY_LOCAL_MACHINE\\SAM\\*',
                'HKEY_LOCAL_MACHINE\\SAM'
              )
            and
            not
        ps.exe imatches
            (
                '?:\\Windows\\System32\\lsass.exe'
            )
      action: >
        {{
            emit . "Potential SAM database dump through registry" ""
        }}

- group: LSASS memory dumping via legitimate or offensive tools
  description: |
    Adversaries may attempt to access credential material stored in the
    process memory of the Local Security Authority Subsystem Service (LSASS).
    After a user logs on, the system generates and stores a variety of credential
    materials in LSASS process memory. These credential materials can be harvested
    by an administrative user or SYSTEM and used to conduct Lateral Movement.
    This rule detects attempts to dump the LSAAS memory to the disk by employing legitimate
    tools such as procdump, Task Manager, Process Explorer or built-in Windows tools such
    as comsvcs.dll.
  labels:
    tactic.id: TA0006
    tactic.name: Credential Access
    tactic.ref: https://attack.mitre.org/tactics/TA0006/
    technique.id: T1003
    technique.name: OS Credential Dumping
    technique.ref: https://attack.mitre.org/techniques/T1003/
    subtechnique.id: T1003.001
    subtechnique.name: LSASS Memory
    subtechnique.ref: https://attack.mitre.org/techniques/T1003/001/
  policy: sequence
  rules:
    - name: LSASS local process object acquired
      condition: >
        open_process
            and
        ps.access.mask.names in ('ALL_ACCESS', 'CREATE_PROCESS')
            and
        ps.sibling.name ~= 'lsass.exe'
            and
            not
        ps.exe imatches
            (
              '?:\\Windows\\System32\\svchost.exe',
              '?:\\ProgramData\\Microsoft\\Windows Defender\\*\\MsMpEng.exe'
            )
    - name: LSASS dump written to the file system
      condition: >
        ps.exe = $1.ps.exe
            and
        write_minidump_file
      max-span: 2m
  action: >
      {{
          emit
            .
          "LSASS memory dumping"
          `Detected an attempt by <code>%1.ps.name</code> process to access
           and read the memory of the **Local Security And Authority Subsystem Service**
           and subsequently write the <code>%2.file.name</code> dump file to the disk device
          `
          "critical"
      }}
